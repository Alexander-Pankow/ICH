# fruits = ["apple", "banana", "cherry"]
# # [(0, 'apple'), (1, 'banana'), (2, 'cherry')]
# for index, fruit in enumerate(fruits): # (0, 'apple')
#     print(f"{index}: {fruit}")
#
# numbers = [10, 20, 15, 30, 25, 35]
#
# for index, value in enumerate(numbers[:-1]):  # Проходим по списку, кроме последнего элемента
#     if value > numbers[index + 1]:  # 10 > 20
#         print(f"{value} больше, чем {numbers[index + 1]}")
#
# for index, value in enumerate(numbers[:-1], start=1):  # Проходим по списку, кроме последнего элемента
#     if value > numbers[index]:  # 10 > 20
#         print(f"{value} больше, чем {numbers[index]}")

# Кортеж уникальных
# Напишите программу, которая обрабатывает кортеж чисел. Программа должна вернуть
# кортеж, в котором будут только уникальные элементы.
# Не используйте неизученные коллекции.
#
# Данные:
# numbers = (1, 2, 3, 2, 1, 4, 5, 3, 6)
#
# Пример вывода:
# Уникальные элементы: (1, 2, 3, 4, 5, 6)

numbers = (1, 2, 3, 2, 1, 4, 5, 3, 6)
new_numbers = [numbers[0]]
for num in numbers:
    if num not in new_numbers:
        new_numbers.append(num)

# Преобразуем список обратно в кортеж
unique_tuple = tuple(new_numbers)
print("Уникальные элементы:", unique_tuple)

# Кортеж выше среднего
# Напишите программу, которая обрабатывает кортеж чисел. Программа должна вернуть кортеж, состоящий из элементов, которые больше среднего значения всех элементов исходного кортежа.
# Данные:
# numbers = (10, 15, 20, 25, 30)
# Пример вывода:
# Элементы больше среднего: (25, 30)




# Генерация отчёта о студентах
# Напишите программу, которая обрабатывает список кортежей, где каждый кортеж содержит имя студента, количество набранных баллов и максимальное количество баллов. Программа должна вывести таблицу с именем, баллом и статусом ("Зачёт" или "Незачёт", если оценка меньше 50). Вывести в соответствии с примером.
# Данные:
# students = [
#     ("Алексей", 80, 100),
#     ("Мария", 50, 100),
#     ("Дмитрий", 70, 100),
#     ("Екатерина", 40, 100)
# ]
#
# Пример вывода:
# Имя             Процент      Статус
# -----------------------------------
# Алексей           80.00       Зачёт
# Мария             50.00       Зачёт
# Дмитрий           70.00       Зачёт
# Екатерина         40.00     Незачёт






# Задание 1.
# Таблица товаров
# Задача: Напишите программу, которая выводит каждый продукт из списка на
# отдельной строке, не используя циклы. Подумайте как сделать это не дублируя код.
# Данные: products = ["Молоко", "Хлеб", "Сахар-песок", "Подсолнечное масло",
# "Шоколадный батончик", "Мороженое"]
# Пример вывода: Молоко Хлеб Сахар-песок Подсолнечное масло Шоколадный
# батончик Мороженое

# products = ["Молоко", "Хлеб", "Сахар-песок", "Подсолнечное масло", "Шоколадный батончик", "Мороженое"]
#
# print(*products, sep='\n')



# Задание 2.
# Фильтрация по количеству
# Задача: Напишите программу, которая фильтрует список кортежей, оставляя только
# те, где количество больше 10. Выведите данные согласно примеру.
# Данные: data = [("апельсин", 5), ("вишня", 12), ("киви", 18), ("ананас", 7), ("яблоко",
# 20)]
# Пример вывода:
# Отфильтрованные данные:
# Товар : вишня | Цена : 12
# Товар : киви | Цена : 18
# Товар : яблоко | Цена : 20


# data = [("апельсин", 5), ("вишня", 12), ("киви", 18), ("ананас", 7), ("яблоко", 20)]
# for item in data:
#     if item[1] > 10:
#         #print(item[0], item[1])
#         print(f'Товар : {item[0]:<10} | Цена : {item[1]:<5}')


# Задание 3.
# Товары со скидкой
# Задача: Напишите программу, которая выводит таблицу с названием товара, его
# ценой, размером скидки (запрашивается у пользователя), и итоговой ценой с
# округлением до двух знаков после запятой. Таблица должна соответствовать
# форматированию ниже.
# Данные: products = [ ("Кофе", 127.99), ("Чай", 52.49), ("Шоколад", 81.99) ]
# Пример вывода: Введите процент скидки: 17
# Название | Цена | Скидка | Итоговая цена
# Кофе | 127.99 | 17% | 106.23
# Чай | 52.49 | 17% | 43.57
# Шоколад | 81.99 | 17% | 68.05

# products = [
#   ("Кофе", 127.99),
#   ("Чай", 52.49),
#   ("Шоколад", 81.99)
#  ]
# discount = int(input("Введите процент скидки: ")) / 100
# print("Название | Цена | Скидка | Итоговая цена")
# print('-' * 100)
# discount_str = str(discount) + "%"
# for item in products:
#     cost = item[1] - item[1] * discount
#
#     print(f'{item[0]:12} | {float(item[1]):12.2f} | {discount_str:^12}| {float(cost):12.2f}')


# Задание 4.
# Таблица покупок
# Задача: Напишите программу, которая обрабатывает список кортежей, где каждый
# кортеж содержит информацию о товаре: название, цена и количество. Выведите
# данные в формате таблицы, выровняв название по левому краю, а цену и количество
# — по правому. Учитывайте, что названия могут быть длинными. Выстраивайте
# выравнивание таблицы динамически, исходя из самого длинного названия товара.
# Данные: products = [ ("Молоко", 3, 10), ("Хлеб", 1, 5), ("Сахар-песок", 2, 15),
# ("Подсолнечное масло", 5, 3), ("Шоколадный батончик", 4, 20), ("Мороженое", 3, 20) ]
# Пример вывода:
# | Название | Цена | Количество |
# | Молоко | 3 | 10 |
# | Хлеб | 1 | 5 |
# | Сахар-песок | 2 | 15 |
# | Подсолнечное масло | 5 | 3 |
# | Шоколадный батончик | 4 | 20 |
# | Мороженое | 3 | 20 |







# Задание 5.
# Письма клиентам
# Задача: Напишите программу, которая генерирует текстовые шаблоны писем для
# клиентов на основе заранее подготовленных данных. В письмах отображается
# информация о покупке, скидке и итоговой стоимости в соответствии с шаблоном.
# Данные: clients = [ ("Иван", "Иванов", 10, [("Кофе", 100.00), ("Чай", 200.00)]), ("Анна",
# "Смирнова", 15, [("Шоколад", 150.00), ("Печенье", 50.00)]), ("Петр", "Сидоров", 20,
# [("Чайник", 1000.00), ("Кружка", 300.00)]) ]
# Пример вывода: Уважаемый Иван Иванов,
# Спасибо за покупку в нашем магазине!
# Вы купили следующие товары:
# ● Кофе: 100.00
# ● Чай: 200.00
# Общая сумма покупок: 300.00 Ваша скидка: 10% Сумма с учётом скидки: 270.00
# Благодарим за покупку!









# Задание 6.
# Отчёт по сотрудникам
# Задача: Напишите программу, которая формирует отчёт по сотрудникам компании. У
# каждого сотрудника указаны имя, фамилия, должность и зарплата. Программа
# должна выводить табличный отчёт с форматированием, подсчитывать общую сумму
# зарплат и среднюю зарплату. Вывести таблицу согласно примеру, форматировать
# суммы до двух символов после запятой.
# Данные: employees = [ ("Иван", "Иванов", "Менеджер", 1600), ("Мария", "Петрова",
# "Аналитик", 2000), ("Сергей", "Сидоров", "Разработчик", 2400), ("Анна", "Смирнова",
# "Дизайнер", 1750) ]
# Пример вывода: Имя Фамилия Должность Зарплата
# Иван Иванов Менеджер 1,600.00 Мария Петрова Аналитик 2,000.00 Сергей Сидоров
# Разработчик 2,400.00 Анна Смирнова Дизайнер 1,750.00
# ИТОГО 7,750.00 Средняя зарплата 1,937.50
# Отчёт по спортивному мероприятию
# Задача: У вас есть список участников спортивного мероприятия. Каждый участник
# представлен кортежем, содержащим:
# ● Имя
# ● Фамилию
# ● Вид спорта
# ● Занятое место
# ● Время завершения (в минутах и секундах)
# Программа должна сформировать для каждого участника отчёт с поздравлением в
# зависимости от его места, вывести общее количество участников и среднее время
# завершения мероприятия.
# Особенности вывода:
# ● Поздравления персонализированы в зависимости от места.
# ● Формат времени выведен с двумя знаками после запятой.
# ● Среднее время рассчитывается по всем участникам.
# ● Табличный отчёт вывести согласно примеру.
# Данные: participants = [ ("Иван", "Иванов", "Бег на 100м", 1, (0, 9.58)), ("Мария",
# "Петрова", "Плавание", 2, (1, 2.34)), ("Сергей", "Сидоров", "Велогонка", 3, (25, 15.10)),
# ("Анна", "Смирнова", "Марафон", 1, (120, 34.56)), ("Дмитрий", "Ковалёв", "Прыжки в
# длину", 4, (0, 8.25)) ]
# Пример вывода:
# Иван Иванов, спасибо за участие в Бег на 100м! Поздравляем с победой!
# Мария Петрова, спасибо за участие в Плавание! Отличный результат!
# Сергей Сидоров, спасибо за участие в Велогонка! Вы заняли призовое место!
# Анна Смирнова, спасибо за участие в Марафон! Поздравляем с победой!
# Дмитрий Ковалёв, спасибо за участие в Прыжки в длину! Удачи в следующий раз!
#



# Задание 7 Отчёт по спортивному мероприятию
# У вас есть список участников спортивного мероприятия.
# Каждый участник представлен кортежем, содержащим:
# ● Имя
# ● Фамилию
# ● Вид спорта
# ● Занятое место
# ● Время завершения (в минутах и секундах)
# Программа должна сформировать для каждого участника отчёт с поздравлением в зависимости от его места,
# вывести общее количество участников и среднее время завершения мероприятия.
# Особенности вывода: ● Поздравления персонализированы в зависимости от места.
# ● Формат времени выведен с двумя знаками после запятой.
# ● Среднее время рассчитывается по всем участникам.
# Табличный отчёт вывести согласно примеру.


# participants = [
#  ("Иван", "Иванов", "Бег на 100м", 1, (0, 9.58)),
#  ("Мария", "Петрова", "Плавание", 2, (1, 2.34)),
#  ("Сергей", "Сидоров", "Велогонка", 3, (25, 15.10)),
#  ("Анна", "Смирнова", "Марафон", 1, (120, 34.56)),
#  ("Дмитрий", "Ковалёв", "Прыжки в длину", 4, (0, 8.25))]
#
# msg= ['Удачи в следующий раз!', 'Поздравляем с победой!','Отличный результат!', 'Вы заняли призовое место!',
#       'Удачи в следующий раз!']
#
# for first_name, last_name, sport, place, time in participants:
#     print(f'{first_name} {last_name}, спасибо за участие в {sport}! {msg[place]}')
# print('ОТЧЁТ ПО МЕРОПРИЯТИЮ:')
# print('Имя Фамилия Вид спорта Место Время завершения')
# print('-'*100)
# Иван Иванов Бег на 100м 1 009.58
# for first_name, last_name, sport, place, time in participants:
#     print(f'{first_name} {last_name}, спасибо за участие в {sport}! {msg[place]}')


fruits = ["apple", "banana", "cherry", "banana", ["banana", "ananas"], []]
search = "banana"

for idx, fruit in enumerate(fruits):
    if type(fruit) == list:
        count_of_matches = fruits[idx].count(search)
        for n in range(count_of_matches):
            fruits[idx].remove(search)
    elif search != fruit:
        fruits.remove(search)

print(fruits)

fruits = ["apple", "banana", "cherry", "banana", ["banana", "ananas"], []]
search = input("search fruit: ")
#search = "banana"
test = []

for fruit in fruits:
    if search != fruit and type(fruit) != list: #
        test.append(fruit)
    if type(fruit) == list:
        for i in fruit:
            if search != i:
                test.append([i])

print(test)