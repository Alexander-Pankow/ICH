# Напишите программу, которая создает список из всех уникальных символов строки, за исключением пробелов.
# Данные:
# text = "hello world"
# Пример вывода:
# Уникальные символы: ['l', 'r', 'd', 'h', 'o', 'w', 'e']
#
# text = "hello world"
#
# unique_chars = list(set(text.replace(" ", "")))
#
# print("Уникальные символы:", unique_chars)
#
#  1 Список квадратов
# Создайте список, содержащий квадраты всех чётных чисел из диапазона от 1 до
# заданного пользователем числа включительно.
# Пример вывода:
# Введите конец диапазона: 20
# [4, 16, 36, 64, 100, 144, 196, 256, 324, 400]

#squares = [i**2 for i in range(1, end + 1) if i % 2 == 0]
# numers = int(input("Введите конец диапазона: "))
#
# result = []
#
# for num in range(2,numers + 2,2):
#     result.append(num ** 2)
# print(result)


# 2 Фильтрация по символу
# Создайте новый список, исключив все строки, содержащие введённый
# пользователем символ.
# Данные:
# words = ["apple", "cherry", "kiwi", "banana", "orange"]
# Пример вывода:
# Исключить символ: r
# ['apple', 'kiwi', 'banana']

# Данные:
# words = ["apple", "cherry", "kiwi", "banana", "orange"]
# result = []
#
# for word in words:
#     if word.find("r") == -1:
#         result.append(word)
# print(result)


# 3 База данных обитателей джунглей
# Python
# Unset
# Python
# Unset
# Данные:
# animals = ["тигр", "слон", "обезьяна", "змея"]
# weights = [250, 4000, 15, 5]
# Пример вывода:
# ['Тигр весит 250 кг', 'Слон весит 4000 кг', 'Обезьяна весит 15 кг', 'Змея весит
# 5 кг']
# Самое лёгкое животное: змея

# animals = ["тигр", "слон", "обезьяна", "змея"]
# weights = [250, 4000, 15, 5]
#
# result = [f"{animal} весит {weight} кг " for animal,weight in zip(animals,weights)]
# print(result)
# light_animal = animals[weights.index(min(weights))]
# print(f"Самое лёгкое животное: {light_animal}")

# 4 Группы слов
# Группируйте слова по длине в обратном порядке, отсортированные по алфавиту
# внутри группы.
# Данные:
# words = ["apple", "banana", "kiwi", "cherry", "pear", "grape", "melon"]
# Пример вывода:
# Группы слов: [['banana', 'cherry'], ['apple', 'grape', 'melon'], ['kiwi',
# 'pear']]


# words = ["apple", "banana", "kiwi", "cherry", "pear", "grape", "melon"]
# result = []
#
# sorted_words = sorted(words, key=len, reverse=True)
#
# current_length = None
#
# for word in sorted_words:
#     if len(word) != current_length:
#         # Начинаем новую группу
#         result.append([word])
#         current_length = len(word)
#     else:
#         # Добавляем к последней группе
#         result[-1].append(word)
#
# print(result)



# 5 Распаковка матрицы
# Python
# Unset
# Unset
# Python
# Создайте список, содержащий все элементы двумерной матрицы в одном
# измерении.
# Данные:
# matrix = [[1, 2], [3, 4], [5, 6]]
# Пример вывода:
# [1, 2, 3, 4, 5, 6]



# 6 Координатная сетка
# Создайте список всех возможных координат на квадратной сетке размером n x n.
# Пример вывода:
# Введите размер координатной сетки: 3
# Координаты: [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1),
# (2, 2)]



# 7 Сравнение матриц
# Проверьте, совпадают ли диагональные элементы двух квадратных матриц
# одинакового размера.
# Данные:
# matrix1 = [
# Unset
# Python
# Unset
#  [1, 2, 3],
#  [4, 5, 6],
#  [7, 8, 9]
# ]
# matrix2 = [
#  [1, 0, 3],
#  [0, 5, 0],
#  [7, 0, 9]
# ]
# Пример вывода:
# Совпадают ли главные диагонали: True
# Совпадают ли побочные диагонали: True



# 8 Подсчёт уникальных слов
# Напишите программу, которая принимает строку текста, разделённого пробелами, и
# определяет количество уникальных слов.
# Данные:
# text = "Apple orange apple banana Orange"
# Пример вывода:
# Количество уникальных: 3
# Python
# Unset
# Python
# Unset


# 9 Одинаковые значения
# Проверка, состоят ли два списка чисел из одинаковых цифр (независимо от
# порядка).
# Данные:
# list1 = [1, 2, 3, 4, 4]
# list2 = [4, 3, 2, 1, 1]
# Пример вывода:
# True




# 10 Охота за сокровищами
# Определение различий и пересечений между двумя наборами драгоценностей.
# Данные:
# chest1 = {"золото", "серебро", "рубины", "алмазы"}
# chest2 = {"серебро", "рубины", "изумруды", "сапфиры"}
# Пример вывода:
# Только в первом сундуке: {'золото', 'алмазы'}
# Общее в обоих сундуках: {'серебро', 'рубины'}
# Все уникальные драгоценности: {'золото', 'серебро', 'рубины', 'алмазы',
# 'изумруды', 'сапфиры'}



# 11 Уникальные в множестве
# Создание списка с элементами, которые есть только в одном из двух множеств.
# Python
# Unset
# Python
# Unset
# Unset
# Данные:
# set1 = {1, 2, 3}
# set2 = {3, 4, 5}
# Пример вывода:
# [1, 2, 4, 5]




# 12 Уникальные по порядку
# Формирование списка уникальных чисел в порядке их появления.
# Данные:
# numbers = [4, 1, 7, 6, 2, 6, 8, 1, 5, 4]
# Пример вывода:
# Уникальные: [4, 1, 7, 6, 2, 8, 5]



# 13 Очередь заказов
# Реализуйте очередь для обработки заказов, пока пользователь не введёт "exit".
# Пример вывода:
# Введите заказ или "exit" для завершения: Pizza
# Введите заказ или "exit" для завершения: Burger
# Введите заказ или "exit" для завершения: Pasta
# Введите заказ или "exit" для завершения: exit
# Первый заказ: Pizza
# Осталось 2 заказов:
# - Burger
# - Pasta


# 14 Напишите программу, которая создаёт новый словарь,
# где значения из исходного словаря становятся ключами, а ключи — значениями.
# Данные:
# original_dict = {"a": 1, "b": 2, "c": 3}
# Пример вывода:
# Инверсированный словарь: {1: 'a', 2: 'b', 3: 'c'}


original_dict = {"a": 1, "b": 2, "c": 3}
for key, value in original_dict.items():
    original_dict.update({key: value})
print(original_dict)


