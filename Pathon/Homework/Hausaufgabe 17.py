#  1 Проверка на подмножество
# Напишите программу, которая проверяет,
# содержит ли первое множество все элементы второго множества.
# Реализуйте решение несколькими способами.
# Решите одним из способов не используя возможности множеств.
# Данные:
# set1 = {1, 2, 3, 4}
# set2 = {2, 3}
# Пример вывода:
# True

#1

set1 = {1, 2, 3, 4}
set2 = {2, 3}

print(set1.issuperset(set2))  # оператор сравнения множеств используется

#2

set1 = {1, 2, 3, 4}
set2 = {2, 3}

print(set1 >= set2)  # оператор сравнения множеств используется

#3


set1 = {1, 2, 3, 4}
set2 = {2, 3}
list1 = list(set1)
list2 = list(set2)

result = True

for elem in list2:
    if elem not in list1:
        result = False
        break

print(result) # оператор сравнения множеств не используется


# 2 Зеркальное подмножество
# Напишите программу, которая проверяет,
# являются ли элементы одного из множеств подмножеством другого.
# В случае положительного ответа возвращает разницу между двумя множествами.
# Проверить необходимо в обе стороны.
# Данные:
# set1 = {2, 3, 4, 5, 6}
# set2 = {4, 5}
# Пример вывода:
# Подмножество: True
# Разница: {2, 3, 6}

set1 = {2, 3, 4, 5, 6}
set2 = {4, 5}

if set1.issubset(set2):
    print("Подмножество: True")
    print("Разница:", set2 - set1)
elif set2.issubset(set1):
    print("Подмножество: True")
    print("Разница:", set1 - set2)
else:
    print("Подмножество: False")